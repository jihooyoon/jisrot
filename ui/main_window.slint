import { ComboBox, Button, CheckBox } from "std-widgets.slint";
export component MainWindow inherits Window{

    title: "Jisrot - Tiny Shopify Events Anal Tools";

    out property <int> pricing_defs_selection: 0;
    in property <string> pricing_defs_data_lbl: "";
    in property <bool> pricing_defs_enable_file_picker: false;

    out property <int> excluding_defs_selection: 0;
    in property <string> excluding_defs_data_lbl: "";
    in property <bool> excluding_defs_enable_file_picker: false;

    out property <bool> debug_mode;
    out property <bool> case_sensitive_regex;

    callback analyze_btn_clicked();
    callback pricing_defs_file_picker_clicked();
    callback excluding_defs_file_picker_clicked();
    callback event_list_file_picker_clicked();
 
    VerticalLayout {
        spacing: 16px;
        padding: 16px;

        definitions_selections := HorizontalLayout {
            spacing: 16px;
            
            VerticalLayout {
                spacing: 4px;
                HorizontalLayout {
                    spacing: 16px;
                    Text {
                        text: "Pricing Definitions:";
                    }
                    Text {
                        text: root.pricing_defs_data_lbl;
                        horizontal-alignment: right;
                        overflow: TextOverflow.elide;
                    }
                }
                
                HorizontalLayout {
                    spacing: 6px;
                    ComboBox {
                        model: ["MS Barcode", "MS Order Printer", "Custom"];
                        current-index: root.pricing_defs_selection;
                        selected => {
                            root.pricing_defs_selection = self.current-index;
                        }
                    }
                    Button {
                        enabled: root.pricing_defs_enable_file_picker;
                        text: "Browse...";
                        clicked => root.pricing_defs_file_picker_clicked();
                    }
                }

            }

            VerticalLayout {
                spacing: 4px;
                HorizontalLayout {
                    spacing: 16px;
                    Text {
                        text: "Excluding Definitions:";
                    }
                    Text {
                        text: root.excluding_defs_data_lbl;
                        horizontal-alignment: right;
                        overflow: TextOverflow.elide;
                    }
                }

                HorizontalLayout {
                    spacing: 6px;
                    ComboBox {
                        model: ["Magestore", "Custom"];
                        current-index: root.excluding_defs_selection;
                        selected => {
                            root.excluding_defs_selection = self.current-index;
                        }
                    }
                    Button {
                        enabled: root.excluding_defs_enable_file_picker;
                        text: "Browse...";
                        clicked => root.excluding_defs_file_picker_clicked();
                    }
                }
            }

        }
        
        Rectangle {
            width: 100%;
            height: 1px;
            background: gray;
            border-radius: 100px;
        }


        Button {
            text: "Select event history file...";
            height: 48px;
            clicked => root.event_list_file_picker_clicked();
        }

        Rectangle {
            width: 100%;
            height: 1px;
            background: gray;
            border-radius: 100px;
        }

        HorizontalLayout {
            CheckBox {
                text: "Enable Debuging";
                checked: root.debug_mode;
                toggled => {
                    root.debug_mode = self.checked;
                }
            }
            CheckBox {
                text: "Case-sensitive Regex";
                checked: root.case_sensitive_regex;
                toggled => {
                    root.case_sensitive_regex = self.checked;
                }
            }
        }
    }

}